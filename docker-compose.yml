version: "3.8"

services:
  nginx:
    container_name: reverse_proxy
    build:
      context: Nginx
      dockerfile: Dockerfile
    volumes:
      - ./Nginx/logs:/var/log/nginx
    restart: always
    ports:
      - "8000:80"
    networks:
      - webnet

  front:
    container_name: front
    build:
      context: front
      dockerfile: Dockerfile
    # env_file:
    # - .env
    volumes:
      - ./front:/usr/app
      - /usr/app/node_modules
      - /usr/app/.next
    restart: always
    networks:
      - webnet

  backend:
    container_name: backend
    build:
      context: ./backend
      target: development
    volumes:
      - ./backend:/app
      # - /usr/src/app/node_modules
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    command: npm run start:dev
    env_file:
      - .env
    networks:
      - webnet
    depends_on:
      - postgres

  postgres:
    container_name: postgres
    image: postgres
    expose:
      - "5432"
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE}
      PG_DATA: /var/lib/postgresql/data
    networks:
      - webnet
    volumes:
      - ./api-db:/var/lib/postgresql/data

networks:
  webnet:
    driver: bridge

# volumes:
#   api-db:
